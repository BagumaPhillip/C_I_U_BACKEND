generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}





// registering a Lecturer

model LecturerSignUp {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  email      String   @unique
  role       String
  password   String
}

model users {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  program        String
  createdAt      DateTime  @default(now())
  lastLogin      DateTime?
  registrationNo String    @unique
  password       String
  role           String
}


// adding courses and course units

model courses {
  id           Int       @id @default(autoincrement())
  facultyName  String
  courseName   String
  courseUnits  String[]  // Store course units as an array of strings
  courseUnitCode  String
  assessments  addAssessment[]  // Relation to assessments
}

model addAssessment {
  id              Int       @id @default(autoincrement())
  title           String
  description     String
  courseId        Int       // Explicit foreign key to courses model
  course          courses   @relation(fields: [courseId], references: [id]) // Relation to courses model
  courseUnit      String
  courseUnitCode  String
  duration        String       // in minutes
  scheduledDate   DateTime
  startTime       DateTime
  endTime         DateTime
  createdBy       String
  createdAt       DateTime  @default(now())
  questions       Question[] @relation("AssessmentQuestions") // Relation to Question model
}

model Question {
  id              Int       @id @default(autoincrement())
  content         String
  answer          String?
  options         Json      // Store options for multiple choice questions
  assessmentId    Int       // Foreign key to addAssessment model
  assessment      addAssessment @relation("AssessmentQuestions", fields: [assessmentId], references: [id]) // Relation back to addAssessment
}
